{"version":3,"sources":["components/Logo/Logo.png","components/Navigation/mnist.jpeg","components/Canvas/Canvas.js","components/Logo/Logo.js","components/Table/TableComponent.js","components/Loader/Loader.js","components/ImageGallery/ImageGalleryComponent.js","components/About/About.js","components/Navigation/Navigation.js","components/Footer/Footer.js","misc/ParticleOptions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","paint","Logo","imageClick","console","log","window","location","reload","react_default","a","createElement","className","onClick","tilt_default","options","max","style","height","width","paddingTop","src","logo","alt","TableComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rows","map","row","key","id","value","Component","Loader","loading","setState","ImageGalleryComponent","handleNavRight","param","e","layers","toConsumableArray","found","find","element","layer","split","index","indexOf","length","item","objectSpread","loaded","images","description","srcSet","getLayerImage","drawnImage","handleNavLeft","bind","assertThisInitialized","image","_this2","fetch","URL","method","headers","Content-Type","body","JSON","stringify","then","response","json","data","prevState","concat","name","picture","push","components_Loader_Loader","React","clickX","clickY","clickDrag","Canvas","predictions","layerImages","showResults","showTableResults","showImageResults","handleMouseDown","handleMouseMove","handleMouseUp","handleMouseLeave","handleOnSubmitImage","handleOnSubmitClear","x","y","dragging","context","refs","canvas","getContext","clearRect","strokeStyle","lineJoin","lineWidth","i","beginPath","moveTo","lineTo","closePath","stroke","forceUpdate","mouseX","pageX","offsetLeft","mouseY","pageY","offsetTop","addClick","redraw","setAttribute","backgroundColor","border","margin","marginLeft","marginRight","display","fillStyle","fillRect","canvas2","canvasNetwork","context2","globalCompositeOperation","destCanvas","destContext","image_Data","getImageData","putImageData","toDataURL","getLayerNames","small_image","Image","onload","drawImage","results","sendToNetwork","_this3","handleData","createData","_this4","img","_this5","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","type","components_Table_TableComponent","components_ImageGallery_ImageGalleryComponent","About","Navigation","imageClickHome","site","imageClickModelSummary","imageClickAbout","component","components_Canvas_Canvas","components_About_About","mnist","src_components_Logo_Logo","Footer","href","title","fill","xmlns","viewBox","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","d","particleOptions","particles","number","density","enable","value_area","color","shape","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","remove","retina_detect","App","components_Navigation_Navigation","particles_default","params","ParticleOptions","components_Footer_Footer","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49d0be5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.8b8a523f.png\";","module.exports = __webpack_public_path__ + \"static/media/mnist.ca39a88a.jpeg\";","import React, { Component } from \"react\";\r\nimport \"./Canvas.css\";\r\nimport \"tachyons\";\r\nimport TableComponent from \"../Table/TableComponent\";\r\nimport ImageGalleryComponent from \"../ImageGallery/ImageGalleryComponent\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nlet clickX = [];\r\nlet clickY = [];\r\nlet clickDrag = [];\r\nlet paint;\r\nlet id = 0;\r\nlet rows = [];\r\nconst URL = \"https://image-recognition-api.herokuapp.com\";\r\n\r\nclass Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      image: \"\",\r\n      layers: [],\r\n      predictions: [],\r\n      layerImages: [],\r\n      showResults: false,\r\n      loading: false,\r\n      showTableResults: false,\r\n      showImageResults: false\r\n    };\r\n\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\r\n    this.handleOnSubmitImage = this.handleOnSubmitImage.bind(this);\r\n    this.handleOnSubmitClear = this.handleOnSubmitClear.bind(this);\r\n  }\r\n\r\n  addClick(x, y, dragging) {\r\n    clickX.push(x);\r\n    clickY.push(y);\r\n    clickDrag.push(dragging);\r\n  }\r\n\r\n  redraw() {\r\n    const canvas = this.refs.canvas;\r\n    const context = canvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n    context.strokeStyle = \"black\";\r\n    context.lineJoin = \"round\";\r\n    context.lineWidth = 10;\r\n\r\n    for (var i = 0; i < clickX.length; i++) {\r\n      context.beginPath();\r\n      if (clickDrag[i] && i) {\r\n        context.moveTo(clickX[i - 1], clickY[i - 1]);\r\n      } else {\r\n        context.moveTo(clickX[i] - 1, clickY[i]);\r\n      }\r\n      context.lineTo(clickX[i], clickY[i]);\r\n      context.closePath();\r\n      context.stroke();\r\n\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    const canvas = this.refs.canvas;\r\n    let mouseX = e.pageX - canvas.offsetLeft;\r\n    let mouseY = e.pageY - canvas.offsetTop;\r\n\r\n    paint = true;\r\n\r\n    this.addClick(mouseX, mouseY);\r\n    this.redraw();\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    if (paint) {\r\n      const canvas = this.refs.canvas;\r\n      let mouseX = e.pageX - canvas.offsetLeft;\r\n      let mouseY = e.pageY - canvas.offsetTop;\r\n\r\n      this.addClick(mouseX, mouseY, true);\r\n      this.redraw();\r\n    }\r\n  }\r\n\r\n  handleMouseUp() {\r\n    paint = false;\r\n  }\r\n\r\n  handleMouseLeave() {\r\n    paint = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const canvas = this.refs.canvas;\r\n    canvas.setAttribute(\"width\", 150);\r\n    canvas.setAttribute(\"height\", 150);\r\n    canvas.style.backgroundColor = \"white\"; //bio je white\r\n    canvas.style.border = \"2px solid\";\r\n    canvas.style.margin = \"10px\";\r\n    canvas.style.marginLeft = \"auto\";\r\n    canvas.style.marginRight = \"auto\";\r\n    canvas.style.display = \"block\";\r\n    const context = canvas.getContext(\"2d\");\r\n    context.fillStyle = \"white\";\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    const canvas2 = this.refs.canvasNetwork;\r\n    canvas2.setAttribute(\"width\", 150);\r\n    canvas2.setAttribute(\"height\", 150);\r\n    canvas2.style.backgroundColor = \"white\"; //bio je white\r\n    canvas2.style.border = \"2px solid\";\r\n    canvas2.style.margin = \"10px\";\r\n    canvas2.style.marginLeft = \"auto\";\r\n    canvas2.style.marginRight = \"auto\";\r\n    canvas2.style.display = \"block\";\r\n    canvas2.style.display = \"none\";\r\n    const context2 = canvas2.getContext(\"2d\");\r\n    context2.fillStyle = \"white\";\r\n    context2.fillRect(0, 0, canvas2.width, canvas2.height);\r\n  }\r\n\r\n  handleOnSubmitImage() {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    const canvas = this.refs.canvas;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    //Put white background behind the image\r\n    context.globalCompositeOperation = \"destination-over\";\r\n    context.fillStyle = \"white\";\r\n    context.fillRect(0, 0, 150, 150);\r\n\r\n    //get destination canvas\r\n    const destCanvas = this.refs.canvasNetwork;\r\n    const destContext = destCanvas.getContext(\"2d\");\r\n\r\n    let image_Data = context.getImageData(0, 0, 150, 150);\r\n    let data = image_Data.data;\r\n    //invert color of image\r\n    for (var i = 0; i < data.length; i += 4) {\r\n      // red\r\n      data[i] = 255 - data[i];\r\n      // green\r\n      data[i + 1] = 255 - data[i + 1];\r\n      // blue\r\n      data[i + 2] = 255 - data[i + 2];\r\n    }\r\n\r\n    // set original image on destination canvas and take the url from canvas\r\n    destContext.putImageData(image_Data, 0, 0);\r\n    const image = destCanvas.toDataURL(\"image/png\");\r\n\r\n    //save the drawn image in the state\r\n    this.setState({\r\n      image: image\r\n    });\r\n    //get all layer names\r\n    this.getLayerNames(image);\r\n\r\n    destContext.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n    destContext.beginPath();\r\n\r\n    //resize the image for CNN network\r\n    let small_image = new Image();\r\n    var imgWidth = 28 / 2;\r\n    var imgHeight = 28 / 2;\r\n\r\n    small_image.onload = () => {\r\n      destContext.drawImage(\r\n        small_image,\r\n        destCanvas.width / 2 - imgWidth,\r\n        destCanvas.height / 2 - imgHeight,\r\n        28,\r\n        28\r\n      );\r\n    };\r\n\r\n    small_image.src = image;\r\n  }\r\n\r\n  getLayerNames(image) {\r\n    fetch(URL + \"/api/GetLayerNames\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"Layers\", data.results);\r\n        this.setState({\r\n          layers: data.results\r\n        });\r\n        //send image to network for prediction\r\n        this.sendToNetwork(image);\r\n      });\r\n  }\r\n\r\n  sendToNetwork(image) {\r\n    console.log(\r\n      \"DATA SENT -> \",\r\n      JSON.stringify({\r\n        image: image\r\n      })\r\n    );\r\n    fetch(URL + \"/api/GetPrediction\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        image: image\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"DATA RECEIVED -> \", data);\r\n        this.handleData(data);\r\n        //Get first image from first layer after prediction\r\n        this.getLayerImage(image);\r\n        //get all layer images\r\n        //this.getAllLayerImages(image);\r\n      });\r\n  }\r\n\r\n  handleData(data) {\r\n    for (let index = 0; index < 4; index++) {\r\n      const element = data.results[index];\r\n      rows.push(this.createData(element.key, element.value));\r\n    }\r\n\r\n    this.setState({\r\n      predictions: rows\r\n    });\r\n  }\r\n\r\n  createData(key, value) {\r\n    id += 1;\r\n    return {\r\n      id,\r\n      key,\r\n      value\r\n    };\r\n  }\r\n\r\n  getLayerImage(image) {\r\n    fetch(URL + \"/api/GetLayerImage\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        layer: [\r\n          {\r\n            layer: this.state.layers[0]\r\n          }\r\n          /*{ layer: this.state.layers[1] }*/\r\n        ],\r\n        image: image\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        //Prepare image array\r\n        let img = [];\r\n        for (let index = 0; index < data.images.length; index++) {\r\n          const element = data.images[index];\r\n          img.push({\r\n            description: element.name,\r\n            srcSet: \"data:image/png;base64,\" + element.picture\r\n          });\r\n        }\r\n\r\n        this.setState(\r\n          {\r\n            layerImages: img\r\n          },\r\n          () => {\r\n            console.log(\"CALLBACK\", this.state.layerImages);\r\n            this.setState({\r\n              showResults: true,\r\n              loading: false\r\n            });\r\n          }\r\n        );\r\n        //this.setState({ showResults: true, loading: false });\r\n      });\r\n  }\r\n\r\n  getAllLayerImages(image) {\r\n    fetch(URL + \"/api/GetAllLayerImages\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        image: image\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        //Prepare image array\r\n        let img = [];\r\n        for (let index = 0; index < data.images.length; index++) {\r\n          const element = data.images[index];\r\n          img.push({\r\n            description: element.name,\r\n            srcSet: \"data:image/png;base64,\" + element.picture\r\n          });\r\n        }\r\n        this.setState(\r\n          prevState => ({\r\n            layerImages: [...prevState.layerImages, img]\r\n          }),\r\n          () => console.log(this.state.layerImages)\r\n        );\r\n        this.setState({\r\n          showResults: true,\r\n          showImageResults: true\r\n        });\r\n      });\r\n  }\r\n\r\n  getWeightImage() {\r\n    fetch(URL + \"/api/GetWeightImage\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data.images);\r\n      });\r\n  }\r\n\r\n  handleOnSubmitClear() {\r\n    const canvas = this.refs.canvas;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    const destCanvas = this.refs.canvasNetwork;\r\n    const destContext = destCanvas.getContext(\"2d\");\r\n\r\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n    context.beginPath();\r\n\r\n    destContext.clearRect(\r\n      0,\r\n      0,\r\n      destContext.canvas.width,\r\n      destContext.canvas.height\r\n    );\r\n    destContext.beginPath();\r\n\r\n    clickX = [];\r\n    clickY = [];\r\n    clickDrag = [];\r\n    rows = [];\r\n\r\n    this.setState({\r\n      image: \"\",\r\n      layers: [],\r\n      predictions: [],\r\n      layerImages: [],\r\n      showResults: false,\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>MNIST image recognition</h2>\r\n        <h3>Please draw a number between 0 - 9</h3>\r\n        <canvas\r\n          ref=\"canvas\"\r\n          onMouseDown={this.handleMouseDown}\r\n          onMouseMove={this.handleMouseMove}\r\n          onMouseUp={this.handleMouseUp}\r\n          onMouseLeave={this.handleMouseLeave}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"SUBMIT\"\r\n          onClick={this.handleOnSubmitImage}\r\n          className=\"w4 pa4 mv4 mr3 f6 grow no-underline br-pill ph3 pv2 mb2 dib white bg-black outline-0\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"CLEAR\"\r\n          onClick={this.handleOnSubmitClear}\r\n          className=\"w4 pa4 mv4 ml3 f6 grow no-underline br-pill ph3 pv2 mb2 dib white bg-black outline-0\"\r\n        />\r\n        <canvas ref=\"canvasNetwork\" />\r\n\r\n        {this.state.showResults ? (\r\n          <div>\r\n            <TableComponent rows={this.state.predictions} />\r\n            <hr />\r\n            <ImageGalleryComponent\r\n              images={this.state.layerImages}\r\n              layers={this.state.layers}\r\n              drawnImage={this.state.image}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <Loader loading={this.state.loading} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport \"./Logo.css\";\r\nimport logo from \"./Logo.png\";\r\n\r\nconst Logo = () => {\r\n\r\n  const pageReload = () => {    \r\n      window.location.reload(); \r\n  }\r\n\r\n  const imageClick = () => {\r\n    console.log('Page reload');\r\n    pageReload();\r\n  } \r\n \r\n  return (    \r\n      <div className=\"divLogo ma4 mt0 w5 link mw5 dt hide-child br2 cover bg-center\" onClick={() => imageClick()}>\r\n        <Tilt\r\n          className=\"Tilt br2 shadow-2\"\r\n          options={{ max: 60 }}\r\n          style={{ height: 170, width: 200 }}\r\n        >\r\n          <div className=\"Tilt-inner pa3\">\r\n          <img style={{ paddingTop: \"5px\" }} src={logo} alt=\"logo\" />\r\n          </div>\r\n          <span className=\"white child pa3 mt5\">Refresh the page</span>\r\n        </Tilt>\r\n      </div>   \r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport \"./TableComponent.css\";\r\n\r\nclass TableComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table-fill\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center\">Number</th>\r\n              <th className=\"text-center\">Probability %</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"table-hover\">\r\n            {this.props.rows.map(row => {\r\n              return (\r\n                <tr key={row.id}>\r\n                  <td className=\"text-center\">{row.key}</td>\r\n                  <td className=\"text-center\">{row.value}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableComponent;\r\n","import React, { Component } from \"react\";\r\nimport \"./Loader.css\";\r\n\r\nclass Loader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: this.props.loading\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return this.props.loading ? (\r\n      <div>\r\n        <div className=\"loader\">\r\n          <div className=\"inner one\" />\r\n          <div className=\"inner two\" />\r\n          <div className=\"inner three\" />\r\n          <h4> Loading.... </h4>\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n//import ImageGallery from \"react-image-gallery\";\r\nimport \"./ImageGalleryComponent.css\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\n\r\nconst URL = \"https://image-recognition-api.herokuapp.com\";\r\n\r\nclass ImageGalleryComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      layers: [],\r\n      images: [],\r\n      drawnImage: \"\",\r\n      srcSet: \"\",\r\n      description: \"\",\r\n      loading: false\r\n    };\r\n    this.handleNavLeft = this.handleNavLeft.bind(this);\r\n    this.handleNavRight = this.handleNavRight.bind(this);\r\n  }\r\n\r\n  handleCustomRightNavClick(onClick) {\r\n    //let idx = this._imageGallery.getCurrentIndex();\r\n    this.setState({ loading: true });\r\n    const found = this.state.layers.find(element => {\r\n      return element.loaded === false;\r\n    });\r\n\r\n    if (typeof found !== \"undefined\") {\r\n      this.getLayerImage(this.state.drawnImage, found, onClick);\r\n    }\r\n  }\r\n\r\n  getLayerImage(image, layer) {\r\n    this.setState({ loading: true });\r\n    fetch(URL + \"/api/GetLayerImage\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        layer: [{ layer: layer }],\r\n        image: image\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState(prevState => ({\r\n          images: [\r\n            ...prevState.images,\r\n            {\r\n              description: data.images[0].name,\r\n              srcSet: \"data:image/png;base64,\" + data.images[0].picture\r\n            }\r\n          ]\r\n        }));\r\n        //Update the loaded layer image property\r\n        const found = this.state.layers.find(element => {\r\n          return element.layer === layer;\r\n        });\r\n\r\n        let layers = [...this.state.layers];\r\n        let index = layers.indexOf(found);\r\n        let item = { ...layers[index] };\r\n        item.loaded = true;\r\n        layers[index] = item;\r\n\r\n        //set the state to our new copy\r\n        this.setState({\r\n          layers: layers,\r\n          srcSet: \"data:image/png;base64,\" + data.images[0].picture,\r\n          description: data.images[0].name,\r\n          loading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Handle layer names\r\n    let layers = [];\r\n    for (let index = 0; index < this.props.layers.length; index++) {\r\n      const element = this.props.layers[index];\r\n      //First layer image is already loaded so everything else is put to false except the first image\r\n      if (index !== 0) {\r\n        layers.push({ loaded: false, layer: element });\r\n      } else {\r\n        layers.push({ loaded: true, layer: element });\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      layers: layers,\r\n      images: this.props.images,\r\n      drawnImage: this.props.drawnImage,\r\n      srcSet: this.props.images[0].srcSet,\r\n      description: this.props.images[0].description\r\n    });\r\n  }\r\n\r\n  handleNavRight = param => e => {\r\n    console.log(\"RIGHT\", param);\r\n    let layers = [...this.state.layers];\r\n    const found = layers.find(element => {\r\n      return element.layer === param.split(\".\")[0];\r\n    });\r\n    let index = layers.indexOf(found);\r\n    index++;\r\n    if (index >= layers.length) {\r\n      console.log(\"Index is grater or equal then the length of array.\");\r\n      return;\r\n    }\r\n\r\n    let item = { ...layers[index] };\r\n\r\n    if (item.loaded) {\r\n      let images = [...this.state.images];\r\n\r\n      const found = images.find(element => {\r\n        return element.description.split(\".\")[0] === item.layer;\r\n      });\r\n\r\n      this.setState({ srcSet: found.srcSet, description: found.description });\r\n    } else {\r\n      this.getLayerImage(this.state.drawnImage, item.layer);\r\n    }\r\n  };\r\n\r\n  handleNavLeft = param => e => {\r\n    console.log(\"LEFT\", param);\r\n    let layers = [...this.state.layers];\r\n    const found = layers.find(element => {\r\n      return element.layer === param.split(\".\")[0];\r\n    });\r\n    let index = layers.indexOf(found);\r\n    index--;\r\n    if (index < 0) {\r\n      console.log(\"Index is lower then zero\");\r\n      return;\r\n    }\r\n    let item = { ...layers[index] };\r\n\r\n    if (item.loaded) {\r\n      let images = [...this.state.images];\r\n\r\n      const found = images.find(element => {\r\n        return element.description.split(\".\")[0] === item.layer;\r\n      });\r\n\r\n      this.setState({ srcSet: found.srcSet, description: found.description });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"slideshow-container\">\r\n        <div>\r\n          <div className=\"mySlides fade\">\r\n            <div className=\"text\">{this.state.description}</div>\r\n            <img src={this.state.srcSet} style={{ width: \"80%\" }} alt=\"\" />\r\n          </div>\r\n          <button\r\n            className=\"prev\"\r\n            onClick={this.handleNavLeft(this.state.description)}\r\n          >\r\n            &#10094;\r\n          </button>\r\n          <button\r\n            className=\"next\"\r\n            onClick={this.handleNavRight(this.state.description)}\r\n          >\r\n            &#10095;\r\n          </button>\r\n        </div>\r\n        <Loader loading={this.state.loading} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryComponent;\r\n","import React, { Component } from \"react\";\r\nimport \"./About.css\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"center\">\r\n        <article className=\"pa2 pa2-ns\">\r\n          <h1 className=\"f2\">MNIST image recognition</h1>\r\n          <img\r\n            src=\"https://www.pyimagesearch.com/wp-content/uploads/2014/06/mnist_sample.jpg\"\r\n            className=\"w-100 f5 measure\"\r\n            alt=\"\"\r\n          />\r\n          <p className=\"measure lh-copy center tj green\">\r\n            The LeNet architecture was first introduced by LeCun et al. in their\r\n            1998 paper, Gradient-Based Learning Applied to Document Recognition.\r\n            As the name of the paper suggests, the authors’ implementation of\r\n            LeNet was used primarily for OCR and character recognition in\r\n            documents. The LeNet architecture is straightforward and small, (in\r\n            terms of memory footprint), making it perfect for teaching the\r\n            basics of CNNs — it can even run on the CPU (if your system does not\r\n            have a suitable GPU), making it a great “first CNN”.\r\n          </p>\r\n          <img\r\n            src=\"https://www.pyimagesearch.com/wp-content/uploads/2016/06/lenet_architecture-768x226.png\"\r\n            className=\"w-100 f5 measure\"\r\n            alt=\"\"\r\n          />\r\n          <p className=\"measure lh-copy center tj green\">\r\n            The LeNet architecture is an excellent “first architecture” for\r\n            Convolutional Neural Networks (especially when trained on the MNIST\r\n            dataset, an image dataset for handwritten digit recognition). LeNet\r\n            is small and easy to understand — yet large enough to provide\r\n            interesting results. Furthermore, the combination of LeNet + MNIST\r\n            is able to run on the CPU, making it easy for beginners to take\r\n            their first step in Deep Learning and Convolutional Neural Networks.\r\n            In many ways, LeNet + MNIST is the “Hello, World” equivalent of Deep\r\n            Learning for image classification.\r\n          </p>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport Canvas from \"../Canvas/Canvas\";\r\nimport About from \"../About/About\";\r\nimport \"./Navigation.css\";\r\nimport mnist from \"./mnist.jpeg\";\r\n\r\nclass Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      site: \"\"\r\n    };\r\n  }\r\n\r\n  imageClickHome = () => {\r\n    this.setState({ site: \"draw\" });\r\n  };\r\n\r\n  imageClickModelSummary = () => {\r\n    this.setState({ site: \"model\" });\r\n  };\r\n\r\n  imageClickAbout = () => {\r\n    this.setState({ site: \"about\" });\r\n  };\r\n\r\n  render() {\r\n    let site = this.state.site;\r\n    let component = \"\";\r\n\r\n    if (site === \"draw\") {\r\n      component = <Canvas />;\r\n    } else if (site === \"model\") {\r\n      component = <h1>Model summary</h1>;\r\n    } else if (site === \"about\") {\r\n      component = <About />;\r\n    } else {\r\n      component = (\r\n        <div>\r\n          <h1>Welcome to MNIST image recognition.</h1>\r\n          <Tilt\r\n            className=\"Tilt br2 shadow-2 center\"\r\n            options={{ max: 60 }}\r\n            style={{ height: 200, width: 200 }}\r\n          >\r\n            <div className=\"Tilt-inner\">\r\n              <img src={mnist} alt=\"logo\" />\r\n            </div>\r\n          </Tilt>\r\n          <h4>Click on the \"Draw\" button to start using the application.</h4>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"pa2 ma2 flex items-start\">\r\n          <Logo />\r\n          <div onClick={() => this.imageClickHome()}>\r\n            <Tilt\r\n              className=\"Tilt br2 shadow-2 mr2 pointer\"\r\n              style={{ width: 150, height: 50 }}\r\n            >\r\n              <div className=\"Tilt-inner pa3\">\r\n                <span>Draw</span>\r\n              </div>\r\n            </Tilt>\r\n          </div>\r\n          <div onClick={() => this.imageClickModelSummary()}>\r\n            <Tilt\r\n              className=\"Tilt br2 shadow-2 mr2 pointer\"\r\n              style={{ width: 150, height: 50 }}\r\n            >\r\n              <div className=\"Tilt-inner pa3\">\r\n                <span>Model summary</span>\r\n              </div>\r\n            </Tilt>\r\n          </div>\r\n          <div onClick={() => this.imageClickAbout()}>\r\n            <Tilt\r\n              className=\"Tilt br2 shadow-2 mr2 pointer\"\r\n              style={{ width: 150, height: 50 }}\r\n            >\r\n              <div className=\"Tilt-inner pa3\">\r\n                <span>About</span>\r\n              </div>\r\n            </Tilt>\r\n          </div>\r\n        </div>\r\n        {component}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"bg-black-80 parent w-100\">\r\n      <footer className=\"tc-l\">\r\n        <div className=\"bg-black-80 w-100\">\r\n          <a\r\n            className=\"link white-60 bg-transparent hover-white inline-flex items-center ma2 tc br2\"\r\n            href=\"https://www.facebook.com/Dilberovic.Ivan\"\r\n            title=\"Facebook\"\r\n          >\r\n            <svg\r\n              className=\"dib h2 w2\"\r\n              fill=\"currentColor\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 16 16\"\r\n              fillRule=\"evenodd\"\r\n              clipRule=\"evenodd\"\r\n              strokeLinejoin=\"round\"\r\n              strokeMiterlimit=\"1.414\"\r\n            >\r\n              <path\r\n                d=\"M15.117 0H.883C.395 0 0 .395 0 .883v14.234c0 .488.395.883.883.883h7.663V9.804H6.46V7.39h2.086V5.607c0-2.066 1.262-3.19 3.106-3.19.883 0 1.642.064 1.863.094v2.16h-1.28c-1 0-1.195.476-1.195 1.176v1.54h2.39l-.31 2.416h-2.08V16h4.077c.488 0 .883-.395.883-.883V.883C16 .395 15.605 0 15.117 0\"\r\n                fillRule=\"nonzero\"\r\n              />\r\n            </svg>\r\n            <span className=\"f6 ml3 pr2\">Facebook</span>\r\n          </a>\r\n          <a\r\n            className=\"link white-60 bg-transparent hover-white inline-flex items-center ma2 tc br2\"\r\n            href=\"https://github.com/IvanDilberovic\"\r\n            title=\"GitHub\"\r\n          >\r\n            <svg\r\n              className=\"dib h2 w2\"\r\n              fill=\"currentColor\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 16 16\"\r\n              fillRule=\"evenodd\"\r\n              clipRule=\"evenodd\"\r\n              strokeLinejoin=\"round\"\r\n              strokeMiterlimit=\"1.414\"\r\n            >\r\n              <path d=\"M8 0C3.58 0 0 3.582 0 8c0 3.535 2.292 6.533 5.47 7.59.4.075.547-.172.547-.385 0-.19-.007-.693-.01-1.36-2.226.483-2.695-1.073-2.695-1.073-.364-.924-.89-1.17-.89-1.17-.725-.496.056-.486.056-.486.803.056 1.225.824 1.225.824.714 1.223 1.873.87 2.33.665.072-.517.278-.87.507-1.07-1.777-.2-3.644-.888-3.644-3.953 0-.873.31-1.587.823-2.147-.083-.202-.358-1.015.077-2.117 0 0 .672-.215 2.2.82.638-.178 1.323-.266 2.003-.27.68.004 1.364.092 2.003.27 1.527-1.035 2.198-.82 2.198-.82.437 1.102.163 1.915.08 2.117.513.56.823 1.274.823 2.147 0 3.073-1.87 3.75-3.653 3.947.287.246.543.735.543 1.48 0 1.07-.01 1.933-.01 2.195 0 .215.144.463.55.385C13.71 14.53 16 11.534 16 8c0-4.418-3.582-8-8-8\" />\r\n            </svg>\r\n            <span className=\"f6 ml3 pr2\">GitHub</span>\r\n          </a>\r\n          <a\r\n            className=\"link white-60 bg-transparent hover-white inline-flex items-center ma2 tc br2\"\r\n            href=\"https://www.linkedin.com/in/ivandilberovic/\"\r\n            title=\"LinkedIn\"\r\n          >\r\n            <svg\r\n              className=\"dib h2 w2\"\r\n              fill=\"currentColor\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 16 16\"\r\n              fillRule=\"evenodd\"\r\n              clipRule=\"evenodd\"\r\n              strokeLinejoin=\"round\"\r\n              strokeMiterlimit=\"1.414\"\r\n            >\r\n              <path\r\n                d=\"M13.632 13.635h-2.37V9.922c0-.886-.018-2.025-1.234-2.025-1.235 0-1.424.964-1.424 1.96v3.778h-2.37V6H8.51V7.04h.03c.318-.6 1.092-1.233 2.247-1.233 2.4 0 2.845 1.58 2.845 3.637v4.188zM3.558 4.955c-.762 0-1.376-.617-1.376-1.377 0-.758.614-1.375 1.376-1.375.76 0 1.376.617 1.376 1.375 0 .76-.617 1.377-1.376 1.377zm1.188 8.68H2.37V6h2.376v7.635zM14.816 0H1.18C.528 0 0 .516 0 1.153v13.694C0 15.484.528 16 1.18 16h13.635c.652 0 1.185-.516 1.185-1.153V1.153C16 .516 15.467 0 14.815 0z\"\r\n                fillRule=\"nonzero\"\r\n              />\r\n            </svg>\r\n            <span className=\"f6 ml3 pr2\">LinkedIn</span>\r\n          </a>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","const particleOptions = {\r\n    particles: {\r\n      number: {\r\n        value: 150,\r\n        density: {\r\n          enable: true,\r\n          value_area: 800\r\n        }\r\n      },\r\n      color: {\r\n        value: \"#000000\"\r\n      },\r\n      shape: {\r\n        type: \"circle\",\r\n        stroke: {\r\n          width: 0.5,\r\n          color: \"#ffffff\"\r\n        },\r\n        polygon: {\r\n          nb_sides: 5\r\n        }\r\n      },\r\n      opacity: {\r\n        value: 0.20518162519630342,\r\n        random: false,\r\n        anim: {\r\n          enable: false,\r\n          speed: 1,\r\n          opacity_min: 0.1,\r\n          sync: false\r\n        }\r\n      },\r\n      size: {\r\n        value: 3,\r\n        random: true,\r\n        anim: {\r\n          enable: false,\r\n          speed: 40,\r\n          size_min: 0.1,\r\n          sync: false\r\n        }\r\n      },\r\n      line_linked: {\r\n        enable: true,\r\n        distance: 150,\r\n        color: \"#ffffff\",\r\n        opacity: 0.4,\r\n        width: 1\r\n      },\r\n      move: {\r\n        enable: true,\r\n        speed: 6,\r\n        direction: \"none\",\r\n        random: false,\r\n        straight: false,\r\n        out_mode: \"out\",\r\n        bounce: false,\r\n        attract: {\r\n          enable: false,\r\n          rotateX: 600,\r\n          rotateY: 1200\r\n        }\r\n      }\r\n    },\r\n    interactivity: {\r\n      detect_on: \"canvas\",\r\n      events: {\r\n        onhover: {\r\n          enable: false,\r\n          mode: \"repulse\"\r\n        },\r\n        onclick: {\r\n          enable: true,\r\n          mode: \"push\"\r\n        },\r\n        resize: true\r\n      },\r\n      modes: {\r\n        grab: {\r\n          distance: 400,\r\n          line_linked: {\r\n            opacity: 1\r\n          }\r\n        },\r\n        bubble: {\r\n          distance: 400,\r\n          size: 40,\r\n          duration: 2,\r\n          opacity: 8,\r\n          speed: 3\r\n        },\r\n        repulse: {\r\n          distance: 200,\r\n          duration: 0.4\r\n        },\r\n        push: {\r\n          particles_nb: 4\r\n        },\r\n        remove: {\r\n          particles_nb: 2\r\n        }\r\n      }\r\n    },\r\n    retina_detect: true\r\n  };\r\n  \r\n  export default particleOptions;\r\n  ","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Particles from \"react-particles-js\";\r\nimport Navigation from \"./components/Navigation/Navigation\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport ParticleOptions from \"./misc/ParticleOptions\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navigation />\r\n        <Particles className=\"particles\" params={ParticleOptions} />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}