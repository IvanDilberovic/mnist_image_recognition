{"version":3,"sources":["components/Logo/Logo.png","components/Canvas/Canvas.js","components/Table/TableComponent.js","components/Loader/Loader.js","components/ImageGallery/ImageGalleryComponent.js","components/Logo/Logo.js","components/Navigation/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","paint","TableComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","rows","map","row","key","id","value","Component","Loader","loading","setState","ImageGalleryComponent","handleNavRight","param","e","console","log","layers","toConsumableArray","found","find","element","layer","split","index","indexOf","length","item","objectSpread","loaded","images","description","srcSet","getLayerImage","drawnImage","handleNavLeft","bind","assertThisInitialized","onClick","image","_this2","fetch","URL","method","headers","Content-Type","body","JSON","stringify","then","response","json","data","prevState","concat","name","picture","push","src","style","width","alt","components_Loader_Loader","React","clickX","clickY","clickDrag","Canvas","predictions","layerImages","showResults","showTableResults","showImageResults","handleMouseDown","handleMouseMove","handleMouseUp","handleMouseLeave","handleOnSubmitImage","handleOnSubmitClear","x","y","dragging","context","refs","canvas","getContext","clearRect","height","strokeStyle","lineJoin","lineWidth","i","beginPath","moveTo","lineTo","closePath","stroke","forceUpdate","mouseX","pageX","offsetLeft","mouseY","pageY","offsetTop","addClick","redraw","setAttribute","backgroundColor","border","margin","marginLeft","marginRight","display","fillStyle","fillRect","canvas2","canvasNetwork","context2","globalCompositeOperation","destCanvas","destContext","image_Data","getImageData","putImageData","toDataURL","getLayerNames","small_image","Image","onload","drawImage","results","sendToNetwork","_this3","handleData","createData","_this4","img","_this5","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","type","components_Table_TableComponent","components_ImageGallery_ImageGalleryComponent","Logo","imageClick","window","location","reload","tilt_default","options","max","paddingTop","logo","Navigation","imageClickHome","imageClickModelSummary","imageClickAbout","site","src_components_Logo_Logo","particleOptions","particles","number","density","enable","value_area","color","shape","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","remove","retina_detect","App","components_Navigation_Navigation","components_Canvas_Canvas","particles_default","params","href","title","fill","xmlns","viewBox","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","d","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.080b5a2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.8b8a523f.png\";","import React, { Component } from \"react\";\r\nimport \"./Canvas.css\";\r\nimport \"tachyons\";\r\nimport TableComponent from \"../Table/TableComponent\";\r\nimport ImageGalleryComponent from \"../ImageGallery/ImageGalleryComponent\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nlet clickX = [];\r\nlet clickY = [];\r\nlet clickDrag = [];\r\nlet paint;\r\nlet id = 0;\r\nlet rows = [];\r\nconst URL = \"https://image-recognition-api.herokuapp.com\";\r\n\r\nclass Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      image: \"\",\r\n      layers: [],\r\n      predictions: [],\r\n      layerImages: [],\r\n      showResults: false,\r\n      loading: false,\r\n      showTableResults: false,\r\n      showImageResults: false\r\n    };\r\n\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\r\n    this.handleOnSubmitImage = this.handleOnSubmitImage.bind(this);\r\n    this.handleOnSubmitClear = this.handleOnSubmitClear.bind(this);\r\n  }\r\n\r\n  addClick(x, y, dragging) {\r\n    clickX.push(x);\r\n    clickY.push(y);\r\n    clickDrag.push(dragging);\r\n  }\r\n\r\n  redraw() {\r\n    const canvas = this.refs.canvas;\r\n    const context = canvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n    context.strokeStyle = \"black\";\r\n    context.lineJoin = \"round\";\r\n    context.lineWidth = 10;\r\n\r\n    for (var i = 0; i < clickX.length; i++) {\r\n      context.beginPath();\r\n      if (clickDrag[i] && i) {\r\n        context.moveTo(clickX[i - 1], clickY[i - 1]);\r\n      } else {\r\n        context.moveTo(clickX[i] - 1, clickY[i]);\r\n      }\r\n      context.lineTo(clickX[i], clickY[i]);\r\n      context.closePath();\r\n      context.stroke();\r\n\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    const canvas = this.refs.canvas;\r\n    let mouseX = e.pageX - canvas.offsetLeft;\r\n    let mouseY = e.pageY - canvas.offsetTop;\r\n\r\n    paint = true;\r\n\r\n    this.addClick(mouseX, mouseY);\r\n    this.redraw();\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    if (paint) {\r\n      const canvas = this.refs.canvas;\r\n      let mouseX = e.pageX - canvas.offsetLeft;\r\n      let mouseY = e.pageY - canvas.offsetTop;\r\n\r\n      this.addClick(mouseX, mouseY, true);\r\n      this.redraw();\r\n    }\r\n  }\r\n\r\n  handleMouseUp() {\r\n    paint = false;\r\n  }\r\n\r\n  handleMouseLeave() {\r\n    paint = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const canvas = this.refs.canvas;\r\n    canvas.setAttribute(\"width\", 150);\r\n    canvas.setAttribute(\"height\", 150);\r\n    canvas.style.backgroundColor = \"white\"; //bio je white\r\n    canvas.style.border = \"2px solid\";\r\n    canvas.style.margin = \"10px\";\r\n    canvas.style.marginLeft = \"auto\";\r\n    canvas.style.marginRight = \"auto\";\r\n    canvas.style.display = \"block\";\r\n    const context = canvas.getContext(\"2d\");\r\n    context.fillStyle = \"white\";\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    const canvas2 = this.refs.canvasNetwork;\r\n    canvas2.setAttribute(\"width\", 150);\r\n    canvas2.setAttribute(\"height\", 150);\r\n    canvas2.style.backgroundColor = \"white\"; //bio je white\r\n    canvas2.style.border = \"2px solid\";\r\n    canvas2.style.margin = \"10px\";\r\n    canvas2.style.marginLeft = \"auto\";\r\n    canvas2.style.marginRight = \"auto\";\r\n    canvas2.style.display = \"block\";\r\n    canvas2.style.display = \"none\";\r\n    const context2 = canvas2.getContext(\"2d\");\r\n    context2.fillStyle = \"white\";\r\n    context2.fillRect(0, 0, canvas2.width, canvas2.height);\r\n  }\r\n\r\n  handleOnSubmitImage() {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    const canvas = this.refs.canvas;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    //Put white background behind the image\r\n    context.globalCompositeOperation = \"destination-over\";\r\n    context.fillStyle = \"white\";\r\n    context.fillRect(0, 0, 150, 150);\r\n\r\n    //get destination canvas\r\n    const destCanvas = this.refs.canvasNetwork;\r\n    const destContext = destCanvas.getContext(\"2d\");\r\n\r\n    let image_Data = context.getImageData(0, 0, 150, 150);\r\n    let data = image_Data.data;\r\n    //invert color of image\r\n    for (var i = 0; i < data.length; i += 4) {\r\n      // red\r\n      data[i] = 255 - data[i];\r\n      // green\r\n      data[i + 1] = 255 - data[i + 1];\r\n      // blue\r\n      data[i + 2] = 255 - data[i + 2];\r\n    }\r\n\r\n    // set original image on destination canvas and take the url from canvas\r\n    destContext.putImageData(image_Data, 0, 0);\r\n    const image = destCanvas.toDataURL(\"image/png\");\r\n\r\n    //save the drawn image in the state\r\n    this.setState({\r\n      image: image\r\n    });\r\n    //get all layer names\r\n    this.getLayerNames(image);\r\n\r\n    destContext.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n    destContext.beginPath();\r\n\r\n    //resize the image for CNN network\r\n    let small_image = new Image();\r\n    var imgWidth = 28 / 2;\r\n    var imgHeight = 28 / 2;\r\n\r\n    small_image.onload = () => {\r\n      destContext.drawImage(\r\n        small_image,\r\n        destCanvas.width / 2 - imgWidth,\r\n        destCanvas.height / 2 - imgHeight,\r\n        28,\r\n        28\r\n      );\r\n    };\r\n\r\n    small_image.src = image;\r\n  }\r\n\r\n  getLayerNames(image) {\r\n    fetch(URL + \"/api/GetLayerNames\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"Layers\", data.results);\r\n        this.setState({\r\n          layers: data.results\r\n        });\r\n        //send image to network for prediction\r\n        this.sendToNetwork(image);\r\n      });\r\n  }\r\n\r\n  sendToNetwork(image) {\r\n    console.log(\r\n      \"DATA SENT -> \",\r\n      JSON.stringify({\r\n        image: image\r\n      })\r\n    );\r\n    fetch(URL + \"/api/GetPrediction\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        image: image\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(\"DATA RECEIVED -> \", data);\r\n        this.handleData(data);\r\n        //Get first image from first layer after prediction\r\n        this.getLayerImage(image);\r\n        //get all layer images\r\n        //this.getAllLayerImages(image);\r\n      });\r\n  }\r\n\r\n  handleData(data) {\r\n    for (let index = 0; index < 4; index++) {\r\n      const element = data.results[index];\r\n      rows.push(this.createData(element.key, element.value));\r\n    }\r\n\r\n    this.setState({\r\n      predictions: rows\r\n    });\r\n  }\r\n\r\n  createData(key, value) {\r\n    id += 1;\r\n    return {\r\n      id,\r\n      key,\r\n      value\r\n    };\r\n  }\r\n\r\n  getLayerImage(image) {\r\n    fetch(URL + \"/api/GetLayerImage\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        layer: [\r\n          {\r\n            layer: this.state.layers[0]\r\n          }\r\n          /*{ layer: this.state.layers[1] }*/\r\n        ],\r\n        image: image\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        //Prepare image array\r\n        let img = [];\r\n        for (let index = 0; index < data.images.length; index++) {\r\n          const element = data.images[index];\r\n          img.push({\r\n            description: element.name,\r\n            srcSet: \"data:image/png;base64,\" + element.picture\r\n          });\r\n        }\r\n\r\n        this.setState(\r\n          {\r\n            layerImages: img\r\n          },\r\n          () => {\r\n            console.log(\"CALLBACK\", this.state.layerImages);\r\n            this.setState({\r\n              showResults: true,\r\n              loading: false\r\n            });\r\n          }\r\n        );\r\n        //this.setState({ showResults: true, loading: false });\r\n      });\r\n  }\r\n\r\n  getAllLayerImages(image) {\r\n    fetch(URL + \"/api/GetAllLayerImages\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        image: image\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        //Prepare image array\r\n        let img = [];\r\n        for (let index = 0; index < data.images.length; index++) {\r\n          const element = data.images[index];\r\n          img.push({\r\n            description: element.name,\r\n            srcSet: \"data:image/png;base64,\" + element.picture\r\n          });\r\n        }\r\n        this.setState(\r\n          prevState => ({\r\n            layerImages: [...prevState.layerImages, img]\r\n          }),\r\n          () => console.log(this.state.layerImages)\r\n        );\r\n        this.setState({\r\n          showResults: true,\r\n          showImageResults: true\r\n        });\r\n      });\r\n  }\r\n\r\n  getWeightImage() {\r\n    fetch(URL + \"/api/GetWeightImage\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data.images);\r\n      });\r\n  }\r\n\r\n  handleOnSubmitClear() {\r\n    const canvas = this.refs.canvas;\r\n    const context = canvas.getContext(\"2d\");\r\n\r\n    const destCanvas = this.refs.canvasNetwork;\r\n    const destContext = destCanvas.getContext(\"2d\");\r\n\r\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n    context.beginPath();\r\n\r\n    destContext.clearRect(0,0,destContext.canvas.width,destContext.canvas.height);\r\n    destContext.beginPath();\r\n\r\n    clickX = [];\r\n    clickY = [];\r\n    clickDrag = [];\r\n    rows = [];\r\n\r\n    this.setState({\r\n      image: \"\",\r\n      layers: [],\r\n      predictions: [],\r\n      layerImages: [],\r\n      showResults: false,\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <canvas\r\n          ref=\"canvas\"\r\n          onMouseDown={this.handleMouseDown}\r\n          onMouseMove={this.handleMouseMove}\r\n          onMouseUp={this.handleMouseUp}\r\n          onMouseLeave={this.handleMouseLeave}\r\n        />\r\n        <input type=\"submit\" value=\"SUBMIT\" onClick={this.handleOnSubmitImage} className=\"w4 pa4 mv4 mr3 f6 grow no-underline br-pill ph3 pv2 mb2 dib white bg-black outline-0\"/>\r\n        <input type=\"submit\" value=\"CLEAR\" onClick={this.handleOnSubmitClear} className=\"w4 pa4 mv4 ml3 f6 grow no-underline br-pill ph3 pv2 mb2 dib white bg-black outline-0\"/>\r\n        <canvas ref=\"canvasNetwork\" />\r\n        \r\n        {this.state.showResults ? (\r\n          <div>\r\n            <TableComponent rows={this.state.predictions} />\r\n            <hr />\r\n            <ImageGalleryComponent\r\n              images={this.state.layerImages}\r\n              layers={this.state.layers}\r\n              drawnImage={this.state.image}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <Loader loading={this.state.loading} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","import React, { Component } from \"react\";\r\nimport \"./TableComponent.css\";\r\n\r\nclass TableComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table-fill\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center\">Number</th>\r\n              <th className=\"text-center\">Probability %</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"table-hover\">\r\n            {this.props.rows.map(row => {\r\n              return (\r\n                <tr key={row.id}>\r\n                  <td className=\"text-center\">{row.key}</td>\r\n                  <td className=\"text-center\">{row.value}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableComponent;\r\n","import React, { Component } from \"react\";\r\nimport \"./Loader.css\";\r\n\r\nclass Loader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: this.props.loading\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return this.props.loading ? (\r\n      <div>\r\n        <div className=\"loader\">\r\n          <div className=\"inner one\" />\r\n          <div className=\"inner two\" />\r\n          <div className=\"inner three\" />\r\n          <h4> Loading.... </h4>\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n//import ImageGallery from \"react-image-gallery\";\r\nimport \"./ImageGalleryComponent.css\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\n\r\nconst URL = \"https://image-recognition-api.herokuapp.com\";\r\n\r\nclass ImageGalleryComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      layers: [],\r\n      images: [],\r\n      drawnImage: \"\",\r\n      srcSet: \"\",\r\n      description: \"\",\r\n      loading: false\r\n    };\r\n    this.handleNavLeft = this.handleNavLeft.bind(this);\r\n    this.handleNavRight = this.handleNavRight.bind(this);\r\n  }\r\n\r\n  handleCustomRightNavClick(onClick) {\r\n    //let idx = this._imageGallery.getCurrentIndex();\r\n    this.setState({ loading: true });\r\n    const found = this.state.layers.find(element => {\r\n      return element.loaded === false;\r\n    });\r\n\r\n    if (typeof found !== \"undefined\") {\r\n      this.getLayerImage(this.state.drawnImage, found, onClick);\r\n    }\r\n  }\r\n\r\n  getLayerImage(image, layer) {\r\n    this.setState({ loading: true });\r\n    fetch(URL + \"/api/GetLayerImage\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        layer: [{ layer: layer }],\r\n        image: image\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState(prevState => ({\r\n          images: [\r\n            ...prevState.images,\r\n            {\r\n              description: data.images[0].name,\r\n              srcSet: \"data:image/png;base64,\" + data.images[0].picture\r\n            }\r\n          ]\r\n        }));\r\n        //Update the loaded layer image property\r\n        const found = this.state.layers.find(element => {\r\n          return element.layer === layer;\r\n        });\r\n\r\n        let layers = [...this.state.layers];\r\n        let index = layers.indexOf(found);\r\n        let item = { ...layers[index] };\r\n        item.loaded = true;\r\n        layers[index] = item;\r\n\r\n        //set the state to our new copy\r\n        this.setState({\r\n          layers: layers,\r\n          srcSet: \"data:image/png;base64,\" + data.images[0].picture,\r\n          description: data.images[0].name,\r\n          loading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Handle layer names\r\n    let layers = [];\r\n    for (let index = 0; index < this.props.layers.length; index++) {\r\n      const element = this.props.layers[index];\r\n      //First layer image is already loaded so everything else is put to false except the first image\r\n      if (index !== 0) {\r\n        layers.push({ loaded: false, layer: element });\r\n      } else {\r\n        layers.push({ loaded: true, layer: element });\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      layers: layers,\r\n      images: this.props.images,\r\n      drawnImage: this.props.drawnImage,\r\n      srcSet: this.props.images[0].srcSet,\r\n      description: this.props.images[0].description\r\n    });\r\n  }\r\n\r\n  handleNavRight = param => e => {\r\n    console.log(\"RIGHT\", param);\r\n    let layers = [...this.state.layers];\r\n    const found = layers.find(element => {\r\n      return element.layer === param.split(\".\")[0];\r\n    });\r\n    let index = layers.indexOf(found);\r\n    index++;\r\n    if (index >= layers.length) {\r\n      console.log(\"Index is grater or equal then the length of array.\");\r\n      return;\r\n    }\r\n\r\n    let item = { ...layers[index] };\r\n\r\n    if (item.loaded) {\r\n      let images = [...this.state.images];\r\n\r\n      const found = images.find(element => {\r\n        return element.description.split(\".\")[0] === item.layer;\r\n      });\r\n\r\n      this.setState({ srcSet: found.srcSet, description: found.description });\r\n    } else {\r\n      this.getLayerImage(this.state.drawnImage, item.layer);\r\n    }\r\n  };\r\n\r\n  handleNavLeft = param => e => {\r\n    console.log(\"LEFT\", param);\r\n    let layers = [...this.state.layers];\r\n    const found = layers.find(element => {\r\n      return element.layer === param.split(\".\")[0];\r\n    });\r\n    let index = layers.indexOf(found);\r\n    index--;\r\n    if (index < 0) {\r\n      console.log(\"Index is lower then zero\");\r\n      return;\r\n    }\r\n    let item = { ...layers[index] };\r\n\r\n    if (item.loaded) {\r\n      let images = [...this.state.images];\r\n\r\n      const found = images.find(element => {\r\n        return element.description.split(\".\")[0] === item.layer;\r\n      });\r\n\r\n      this.setState({ srcSet: found.srcSet, description: found.description });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"slideshow-container\">\r\n        <div>\r\n          <div className=\"mySlides fade\">\r\n            <div className=\"text\">{this.state.description}</div>\r\n            <img src={this.state.srcSet} style={{ width: \"80%\" }} alt=\"\" />\r\n          </div>\r\n          <button\r\n            className=\"prev\"\r\n            onClick={this.handleNavLeft(this.state.description)}\r\n          >\r\n            &#10094;\r\n          </button>\r\n          <button\r\n            className=\"next\"\r\n            onClick={this.handleNavRight(this.state.description)}\r\n          >\r\n            &#10095;\r\n          </button>\r\n        </div>\r\n        <Loader loading={this.state.loading} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryComponent;\r\n","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport \"./Logo.css\";\r\nimport logo from \"./Logo.png\";\r\n\r\nconst Logo = () => {\r\n\r\n  const pageReload = () => {    \r\n      window.location.reload(); \r\n  }\r\n\r\n  const imageClick = () => {\r\n    console.log('Page reload');\r\n    pageReload();\r\n  } \r\n \r\n  return (    \r\n      <div className=\"divLogo ma4 mt0 w5 link mw5 dt hide-child br2 cover bg-center\" onClick={() => imageClick()}>\r\n        <Tilt\r\n          className=\"Tilt br2 shadow-2\"\r\n          options={{ max: 60 }}\r\n          style={{ height: 170, width: 200 }}\r\n        >\r\n          <div className=\"Tilt-inner pa3\">\r\n          <img style={{ paddingTop: \"5px\" }} src={logo} alt=\"logo\" />\r\n          </div>\r\n          <span className=\"white child pa3 mt5\">Refresh the page</span>\r\n        </Tilt>\r\n      </div>   \r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React,{ Component  } from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport Logo from \"../Logo/Logo\";\r\n\r\nclass Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      site: \"\"\r\n    };\r\n  }\r\n\r\n  imageClickHome = () => {\r\n    console.log('Home');        \r\n  } \r\n\r\n  imageClickModelSummary = () => {\r\n    console.log('Model summary'); \r\n  }\r\n\r\n  imageClickAbout = () => {\r\n    console.log('About');  \r\n  }\r\n\r\nrender(){\r\n  return (\r\n    <div className=\"pa2 ma2 flex items-start\">\r\n        <Logo></Logo>\r\n        <div onClick={() => this.imageClickHome()}>\r\n          <Tilt className=\"Tilt br2 shadow-2 mr2 pointer\" style={{ width :150, height:50 }}>\r\n            <div className=\"Tilt-inner pa3\">\r\n              <span>Home</span>\r\n            </div>\r\n          </Tilt>\r\n        </div>\r\n        <div onClick={() => this.imageClickModelSummary()}>\r\n          <Tilt className=\"Tilt br2 shadow-2 mr2 pointer\" style={{ width :150, height:50 }}>\r\n            <div className=\"Tilt-inner pa3\">\r\n              <span>Model summary</span>\r\n            </div>\r\n          </Tilt>\r\n        </div>\r\n        <div onClick={() => this.imageClickAbout()}>\r\n          <Tilt className=\"Tilt br2 shadow-2 mr2 pointer\" style={{ width :150, height:50 }}>\r\n            <div className=\"Tilt-inner pa3\">\r\n              <span>About</span>\r\n            </div>\r\n          </Tilt>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n}\r\n\r\nexport default Navigation;\r\n\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Particles from \"react-particles-js\";\r\nimport Canvas from \"./components/Canvas/Canvas\";\r\nimport Navigation from './components/Navigation/Navigation';\r\n\r\n\r\n\r\nconst particleOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 150,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    },\r\n    color: {\r\n      value: \"#000000\"\r\n    },\r\n    shape: {\r\n      type: \"circle\",\r\n      stroke: {\r\n        width: 0.5,\r\n        color: \"#ffffff\"\r\n      },\r\n      polygon: {\r\n        nb_sides: 5\r\n      }\r\n    },\r\n    opacity: {\r\n      value: 0.20518162519630342,\r\n      random: false,\r\n      anim: {\r\n        enable: false,\r\n        speed: 1,\r\n        opacity_min: 0.1,\r\n        sync: false\r\n      }\r\n    },\r\n    size: {\r\n      value: 3,\r\n      random: true,\r\n      anim: {\r\n        enable: false,\r\n        speed: 40,\r\n        size_min: 0.1,\r\n        sync: false\r\n      }\r\n    },\r\n    line_linked: {\r\n      enable: true,\r\n      distance: 150,\r\n      color: \"#ffffff\",\r\n      opacity: 0.4,\r\n      width: 1\r\n    },\r\n    move: {\r\n      enable: true,\r\n      speed: 6,\r\n      direction: \"none\",\r\n      random: false,\r\n      straight: false,\r\n      out_mode: \"out\",\r\n      bounce: false,\r\n      attract: {\r\n        enable: false,\r\n        rotateX: 600,\r\n        rotateY: 1200\r\n      }\r\n    }\r\n  },\r\n  interactivity: {\r\n    detect_on: \"canvas\",\r\n    events: {\r\n      onhover: {\r\n        enable: false,\r\n        mode: \"repulse\"\r\n      },\r\n      onclick: {\r\n        enable: true,\r\n        mode: \"push\"\r\n      },\r\n      resize: true\r\n    },\r\n    modes: {\r\n      grab: {\r\n        distance: 400,\r\n        line_linked: {\r\n          opacity: 1\r\n        }\r\n      },\r\n      bubble: {\r\n        distance: 400,\r\n        size: 40,\r\n        duration: 2,\r\n        opacity: 8,\r\n        speed: 3\r\n      },\r\n      repulse: {\r\n        distance: 200,\r\n        duration: 0.4\r\n      },\r\n      push: {\r\n        particles_nb: 4\r\n      },\r\n      remove: {\r\n        particles_nb: 2\r\n      }\r\n    }\r\n  },\r\n  retina_detect: true\r\n};\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">   \r\n        <Navigation />         \r\n        <h2>MNIST image recognition</h2>\r\n        <h3>Please draw a number between 0 - 9</h3>        \r\n        <Canvas />\r\n        <Particles className=\"particles\" params={particleOptions} />\r\n        <div className=\"w-100 bg-black-80 Footer\">\r\n          <footer className=\"tc-l\">\r\n            <div className=\"w-100 bg-black-80 mt7\">\r\n              <a className=\"link white-60 bg-transparent hover-white inline-flex items-center ma2 tc br2\" href=\"https://www.facebook.com/Dilberovic.Ivan\" title=\"Facebook\">\r\n                <svg className=\"dib h2 w2\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fillRule=\"evenodd\" clipRule=\"evenodd\" strokeLinejoin=\"round\" strokeMiterlimit=\"1.414\"><path d=\"M15.117 0H.883C.395 0 0 .395 0 .883v14.234c0 .488.395.883.883.883h7.663V9.804H6.46V7.39h2.086V5.607c0-2.066 1.262-3.19 3.106-3.19.883 0 1.642.064 1.863.094v2.16h-1.28c-1 0-1.195.476-1.195 1.176v1.54h2.39l-.31 2.416h-2.08V16h4.077c.488 0 .883-.395.883-.883V.883C16 .395 15.605 0 15.117 0\" fillRule=\"nonzero\"/></svg>\r\n                <span className=\"f6 ml3 pr2\">Facebook</span>\r\n              </a>\r\n              <a className=\"link white-60 bg-transparent hover-white inline-flex items-center ma2 tc br2\" href=\"https://github.com/IvanDilberovic\" title=\"GitHub\">\r\n                <svg className=\"dib h2 w2\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fillRule=\"evenodd\" clipRule=\"evenodd\" strokeLinejoin=\"round\" strokeMiterlimit=\"1.414\"><path d=\"M8 0C3.58 0 0 3.582 0 8c0 3.535 2.292 6.533 5.47 7.59.4.075.547-.172.547-.385 0-.19-.007-.693-.01-1.36-2.226.483-2.695-1.073-2.695-1.073-.364-.924-.89-1.17-.89-1.17-.725-.496.056-.486.056-.486.803.056 1.225.824 1.225.824.714 1.223 1.873.87 2.33.665.072-.517.278-.87.507-1.07-1.777-.2-3.644-.888-3.644-3.953 0-.873.31-1.587.823-2.147-.083-.202-.358-1.015.077-2.117 0 0 .672-.215 2.2.82.638-.178 1.323-.266 2.003-.27.68.004 1.364.092 2.003.27 1.527-1.035 2.198-.82 2.198-.82.437 1.102.163 1.915.08 2.117.513.56.823 1.274.823 2.147 0 3.073-1.87 3.75-3.653 3.947.287.246.543.735.543 1.48 0 1.07-.01 1.933-.01 2.195 0 .215.144.463.55.385C13.71 14.53 16 11.534 16 8c0-4.418-3.582-8-8-8\"/></svg>\r\n                <span className=\"f6 ml3 pr2\">GitHub</span>\r\n              </a>            \r\n              <a className=\"link white-60 bg-transparent hover-white inline-flex items-center ma2 tc br2\" href=\"https://www.linkedin.com/in/ivandilberovic/\" title=\"LinkedIn\">\r\n                <svg className=\"dib h2 w2\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fillRule=\"evenodd\" clipRule=\"evenodd\" strokeLinejoin=\"round\" strokeMiterlimit=\"1.414\"><path d=\"M13.632 13.635h-2.37V9.922c0-.886-.018-2.025-1.234-2.025-1.235 0-1.424.964-1.424 1.96v3.778h-2.37V6H8.51V7.04h.03c.318-.6 1.092-1.233 2.247-1.233 2.4 0 2.845 1.58 2.845 3.637v4.188zM3.558 4.955c-.762 0-1.376-.617-1.376-1.377 0-.758.614-1.375 1.376-1.375.76 0 1.376.617 1.376 1.375 0 .76-.617 1.377-1.376 1.377zm1.188 8.68H2.37V6h2.376v7.635zM14.816 0H1.18C.528 0 0 .516 0 1.153v13.694C0 15.484.528 16 1.18 16h13.635c.652 0 1.185-.516 1.185-1.153V1.153C16 .516 15.467 0 14.815 0z\" fillRule=\"nonzero\"/></svg>\r\n                <span className=\"f6 ml3 pr2\">LinkedIn</span>\r\n              </a>        \r\n            </div>\r\n          </footer>\r\n        </div>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}